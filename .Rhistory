sqrt((0.327)/130)*1.96
sqrt((0.327)/130)*2
.327/132
.327/130
(.327/130)^2
confint
confint(0.327)
?confint
sqrt(11.375276-.327/130)
pred(t1)
predict(t1)
predict(t2)
predict(t3)
17.81164-16.35875
17.81164-16.35875
1.5/2
pbm$inter
predict(t1)
21.08629-20.75882
21.41375-20.75882
16.35875-17.81164
16.35875-18.13911
17.8-16.4
17.8-16.3
18.13911-16.35875
r <- predict(t1)
r
r <- predict(t1)
cbind(r, r+1.125424, r-1.125424)
r
k<-cbind(r, r+1.125424, r-1.125424)
k
rownames(k)
rownames(k) <- seq(0:131)
k
16.35875-17.81164
pbm
subset(pbm[c(avgHORMO),], groupid=="TGV")
subset(pbm[c("avgHORMO"),], groupid=="TGV")
subset(pbm[,c("avgHORMO")], groupid=="TGV")
pbm$avgHORMO[pbm$groupid=="TGV"]
17.35375-16.75824
16.87032-17.35375
tdat<-pbm$avgHORMO[pbm$groupid=="TGV"]
tdat
cbind(tdat, tdat+1.125424, tdat-1.125424)
k
k<-cbind(r, r+1.125424, r-1.125424, unique(pbm$inter))
k
k<-cbind(r, r+1.125424, r-1.125424, pbm$inter[pbm$groupid=="TGV"]))
k<-cbind(r, r+1.125424, r-1.125424, pbm$inter[pbm$groupid=="TGV"])
k
predict(t1)
predict(t2)
predict(t3)
t3 <- lm(avgHORMO~monthyr, data=subset(pbm, groupid=="TGV" & inter==1))
summary(t3)
t3 <- lm(avgHORMO~monthyr, data=subset(pbm, groupid=="TGV" && inter==1))
t3 <- lm(avgHORMO~monthyr, data=subset(pbm, groupid=="TGV" & inter==1))
summary(t3)
predict(t2)
summary(t3)
subset(pbm, groupid=="TGV" & inter==1)
t4dat <- subset(pbm, groupid=="TGV" & inter==1)
t4dat
t4 <- lm(avgHORMO~monthyr, data=t4dat)
summary(t4)
t4dat
t4 <- lm(avgHORMO~(monthyr-99), data=t4dat)
t4dat$monthyr <= t4dat$monthyr-100
t4dat <- subset(pbm, groupid=="TGV" & inter==1)
t4dat$monthyr <- t4dat$monthyr-100
t4dat
t4 <- lm(avgHORMO~monthyr, data=t4dat)
summary(t4)
pred(t2)
predict(t2)
predict(t4)
pbm$avgHORMO[pbm$groupid=="TGV"]
17.17252 -16.75824
16.75824-17.35375
t4dat <- subset(pbm, groupid=="TGV" & inter==0)
t4dat <- subset(pbm, groupid=="TGV" & inter==0)
t4dat <- subset(pbm$avgHORMO, groupid=="TGV" & inter==0)
pbm$avgHORMO[pbm$groupid=="TGV"]
cbind(pbm$avgHORMO[pbm$groupid=="TGV"], pbm$inter[pbm$groupid=="TGV"])
16.87032+ 1.125424
cbind(pbm$avgHORMO[pbm$groupid=="TGV"], pbm$inter[pbm$groupid=="TGV"], pbm$avgHORMO[pbm$groupid=="TGV"]+1.125424 )
0.303+0.822
0.303457-1.125424
1.125424-0.303457
0.821967+ 0.303457
0.303 + 0.822
install.packages("kernlab")
library(kernlab)
data(spam)
str(spam[, 1:15])
head(spam)
set.seed(3435)
trainIndicator = rbinom(4601, siz = 1, prob = 0.5)
trainSpam = spam[trainIndicator == 1, ]
testSpam = spam[trainIndicator == 0, ]
0.031 + 0.246
pbm
pbm$avgCN609[pbm$groupid=="TGV"]
antid <- pbm$avgCN609[pbm$groupid=="TGV"]
antip <- pbm$avgANTP2[pbm$groupid=="TGV"]
hormo <- pbm$avgHORMO[pbm$groupid=="TGV"]
coh
install.packages("seawave")
lag(antid,-1)
install.packages("dyn")
library(dyn)
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-24))
ts(pbm$avgCN609[pbm$groupid=="TGV"])
antid <- ts(pbm$avgCN609[pbm$groupid=="TGV"])
class(antid)
antid <- ts(pbm$avgCN609[pbm$groupid=="TGV"])
antip <- ts(pbm$avgANTP2[pbm$groupid=="TGV"])
hormo <- ts(pbm$avgHORMO[pbm$groupid=="TGV"])
dyn$lm(hormo ~ lag(antid, -1:-24))
dyn$lm(hormo ~ lag(antid, -1:-24), na.omit=TRUE)
dyn$lm(hormo ~ lag(antid, -1:-24), na.rm=TRUE)
dyn$lm(hormo ~ lag(antid, 1:24))
antid <- zoo(pbm$avgCN609[pbm$groupid=="TGV"])
antip <- zoo(pbm$avgANTP2[pbm$groupid=="TGV"])
hormo <- zoo(pbm$avgHORMO[pbm$groupid=="TGV"])
model.antid <- dyn$lm(hormo ~ lag(antid, 1:24))
model.antid
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-24))
summary(model.antid)
dyn$lm(hormo ~ lag(antid, -1:-3))
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-3))
summary(model.antid)
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-12))
summary(model.antid)
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-6))
summary(model.antid)
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-3))
summary(model.antid)
plot(model.antid)
model.antip <- dyn$lm(hormo ~ lag(antip, -1:-3))
plot(model.antip)
summary(model.antip)
confint(model.antip)
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-6))
model.antip <- dyn$lm(hormo ~ lag(antip, -1:-6))
summary(model.antid)
summary(model.antip)
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-2))
model.antip <- dyn$lm(hormo ~ lag(antip, -1:-2))
summary(model.antip)
summary(model.antid)
model.antid <- dyn$lm(hormo ~ lag(antid, -1) + lag(antid, -2))
model.antip <- dyn$lm(hormo ~ lag(antip, -1) + lag(antip, -2))
summary(model.antid)
summary(model.antip)
nantid <- zoo(pbm$avgCN609[pbm$groupid=="Non-TGV"])
nantip <- zoo(pbm$avgANTP2[pbm$groupid=="Non-TGV"])
nhormo <- zoo(pbm$avgHORMO[pbm$groupid=="Non-TGV"])
nmodel.antid <- dyn$lm(hormo ~ lag(nantid, -1) + lag(nantid, -2))
nmodel.antip <- dyn$lm(hormo ~ lag(nantip, -1) + lag(nantip, -2))
summary(nmodel.antid)
summary(model.antid)
confint(model.antid)
confint(nmodel.antid)
confint(nmodel.antip)
confint(model.antip)
nmodel.antid <- dyn$lm(nhormo ~ lag(nantid, -1) + lag(nantid, -2))
nmodel.antip <- dyn$lm(nhormo ~ lag(nantip, -1) + lag(nantip, -2))
confint(model.antip)
confint(nmodel.antip)
confint(nmodel.antid)
confint(model.antid)
summary(nmodel.antid)
antid <- zoo(pbm$avgCN609[pbm$groupid=="TGV"])
antip <- zoo(pbm$avgANTP2[pbm$groupid=="TGV"])
hormo <- zoo(pbm$avgHORMO[pbm$groupid=="TGV"])
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-24))
model.antip <- dyn$lm(hormo ~ lag(antip, -1:-24))
nantid <- zoo(pbm$avgCN609[pbm$groupid=="Non-TGV"])
nantip <- zoo(pbm$avgANTP2[pbm$groupid=="Non-TGV"])
nhormo <- zoo(pbm$avgHORMO[pbm$groupid=="Non-TGV"])
nmodel.antid <- dyn$lm(nhormo ~ lag(nantid, -1:-24))
nmodel.antip <- dyn$lm(nhormo ~ lag(nantip, -1:-24))
summary(model.antid)
summary(nmodel.antid)
summary(model.antip)
summary(nmodel.antip)
antid <- zoo(pbm$avgCN609[pbm$groupid=="TGV"])
antip <- zoo(pbm$avgANTP2[pbm$groupid=="TGV"])
hormo <- zoo(pbm$avgHORMO[pbm$groupid=="TGV"])
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-3))
model.antip <- dyn$lm(hormo ~ lag(antip, -1:-3))
nantid <- zoo(pbm$avgCN609[pbm$groupid=="Non-TGV"])
nantip <- zoo(pbm$avgANTP2[pbm$groupid=="Non-TGV"])
nhormo <- zoo(pbm$avgHORMO[pbm$groupid=="Non-TGV"])
nmodel.antid <- dyn$lm(nhormo ~ lag(nantid, -1:-3))
nmodel.antip <- dyn$lm(nhormo ~ lag(nantip, -1:-3))
summary(model.antid); summary(nmodel.antid)
summary(model.antip); summary(nmodel.antip)
antid <- zoo(pbm$avgCN609[pbm$groupid=="TGV"]*10)
antip <- zoo(pbm$avgANTP2[pbm$groupid=="TGV"]*10)
hormo <- zoo(pbm$avgHORMO[pbm$groupid=="TGV"]*10)
model.antid <- dyn$lm(hormo ~ lag(antid, -1:-3))
model.antip <- dyn$lm(hormo ~ lag(antip, -1:-3))
nantid <- zoo(pbm$avgCN609[pbm$groupid=="Non-TGV"]*10)
nantip <- zoo(pbm$avgANTP2[pbm$groupid=="Non-TGV"]*10)
nhormo <- zoo(pbm$avgHORMO[pbm$groupid=="Non-TGV"]*10)
nmodel.antid <- dyn$lm(nhormo ~ lag(nantid, -1:-3))
nmodel.antip <- dyn$lm(nhormo ~ lag(nantip, -1:-3))
summary(model.antip); summary(nmodel.antip)
antid
summary(model.antip); summary(nmodel.antip)
summary(model.antip); summary(nmodel.antip)
summary(model.antip); summary(nmodel.antip)
summary(model.antid); summary(nmodel.antid)
plot(pbm[, "avgHORMO"])
lines(fitted(model.antid), col="black", lty=1)
lines(fitted(model.antid), col="black", lty=2)
lines(fitted(nmodel.antip), col="darkgrey", lty=1)
lines(fitted(nmodel.antip), col="darkgrey", lty=2)
plot(pbm[, "avgHORMO"])
plot(pbm[, "avgHORMO"]*10)
lines(fitted(model.antid), col="black", lty=1)
lines(fitted(model.antip), col="black", lty=2)
lines(fitted(nmodel.antid), col="darkgrey", lty=1)
lines(fitted(nmodel.antid), col="red", lty=1)
lines(fitted(nmodel.antip), col="red", lty=2)
lm(hormo ~ lag(antip)
)
library(ts)
install.packages("ts")
install.packages("markdown")
install.packages("slidify")
set.seed(1)
x <- rnorm(100)
mean(x)
**July 18, 2015**
July 18, 2015
clear
clear()
getwd()
setwd("/Users/drktjones")
getwd
getwd()
setwd("./datasciencecoursera/")
getwd()
read.csv("activity.csv", header = T, colClasses = c("numeric",
"character", "numeric"))
getwd()
setwd("/Users/drktjones")
getwd()
setwd("./datasciencecoursera/rd")
getwd()
getwd()
setwd("./datasciencecoursera/rd")
getwd()
setwd("/Users/drktjones")
setwd("/Users/drktjones/datasciencecoursera/rd") # Directory where downloaded data is stored
getwd
getwd()
setwd("/Users/drktjones")
setwd("./datasciencecoursera/rd")
getwd()
getwd()
read.csv("activity.csv", header = T, colClasses = c("numeric",
"character", "numeric"))
dat <- read.csv("activity.csv", header = TRUE, colClasses = c("numeric", "character", "numeric"))
dag
names(dat)
str(dat)
dat <- read.csv("activity.csv", header = TRUE, colClasses = c("numeric", "character", "numeric"))
str(dat)
dat <- read.csv("activity.csv", header = TRUE, colClasses = c("numeric", "character", "numeric"))
str(dat)
print(paste("echo = TRUE"))
eval(print(paste("echo = TRUE")))
eval(print("echo = TRUE"))
print("echo = TRUE")
dat
head(dat)
aggregagte(steps ~ date, data=dat, FUN=sum)
aggregate(steps ~ date, data=dat, FUN=sum)
hist(totalnum$steps, xlab=totalnum$date)
totalnum <- aggregate(steps ~ date, data = dat, FUN = sum)
hist(totalnum$steps, xlab=totalnum$date)
mean
mean(totalnum$steps)
median(totalnum$steps)
dat
head(dat)
dat[interval==0]
dat[interval=="0"]
dat[dat$interval=="0"]
dat[dat$interval==0]
str(Dat)
str(dat)
dat[dat$interval==0]
dat[dat$interval==0,]
aggregate(steps ~ interval, data = dat, FUN = mean)
mean(dat[dat$interval==0,])
mean(dat[dat$interval==0,], na.rm=T)
mean(dat[dat$interval==0,], na.rm=TRUE)
mean(dat[dat$interval==0,], na.omit=TRUE)
mean(dat$steps[dat$interval==0,], na.omit=TRUE)
mean(dat$steps[dat$interval==0], na.omit=TRUE)
mean(dat$steps[dat$interval==0], na.rm=TRUE)
aggregate(steps ~ interval, data = dat, FUN = mean)
avgsteps_int <- aggregate(steps ~ interval, data = dat, FUN = mean)
plot(steps~interval, type = "l", data = avgsteps_int)
avgsteps_int$interval[avgsteps_int$steps==max(avgsteps_int$steps)]
sum(is.na(dat))
meanstep
meansteps
meanstep
names(dat)
dat_imp
dat_imp <- dat
dat_imp
dat_imp$steps
dat_imp$steps[9995]
for(i in 1:ncol(dat_imp$step)){
dat_imp$steps[is.na(dat_imp$steps[i]) <- mean(dat_imp$steps, na.rm = TRUE)
}
for(i in 1:ncol(dat_imp$step)){
dat_imp$steps[is.na(dat_imp$steps[i])] <- mean(dat_imp$steps, na.rm = TRUE)
}
ncol(dat_imp$steps)
nrow(dat_imp$steps)
ncol(dat_imp$steps)
dat_imp$steps
dim(dat_imp$steps0
dim(dat_imp$steps)
dat_imp$steps
str(dat_imp$steps)
len(dat_imp$steps)
length(dat_imp$steps)
for(i in 1:length(dat_imp$step)){
dat_imp$steps[is.na(dat_imp$steps[i])] <- mean(dat_imp$steps, na.rm = TRUE)
}
dat_imp
dat_imp <- dat
dat_imp <- dat
for (i in 1:length(dim_imp$steps)) {
if (is.na(dat_imp$steps[i])) {
dat_imp$steps <- mean(dat_imp$steps, na.rm = TRUE)
}
}
dat_imp <- dat
for (i in 1:length(dat_imp$steps)) {
if (is.na(dat_imp$steps[i])) {
dat_imp$steps <- mean(dat_imp$steps, na.rm = TRUE)
}
}
dat_imp
dat_imp <- dat
for (i in 1:length(dat_imp$steps)) {
if (is.na(dat_imp$steps[i])) {
dat_imp$steps[i] <- mean(dat_imp$steps, na.rm = TRUE)
}
}
dat_imp
dat_imp[9995]
dat_imp$steps[9995]
dat_imp
dat
dat
dat_imp
dat <- read.csv(file = "activity.csv", header = TRUE,
colClasses = c("numeric", "character", "numeric"))
dat$date <- as.Date(dat$dat, format = "%Y-%m-%d")
dat$interval <- factor(dat$interval)
datt
dat
dat_imp <- dat
for (i in 1:length(dat_imp$steps)) {
if (is.na(dat_imp$steps[i])) {
dat_imp$steps[i] <- mean(dat_imp$steps, na.rm = TRUE)
}
}
cbind(dat, dat_imp)
tail(cbind(dat, dat_imp))
sum(is.na(dat$steps))
sum(is.na(dat$date))
sum(is.na(dat$interval))
We see that the NA's were replaced by the overall mean of **`r mean(dat$steps, na.rm = T)`**.
cbind(dat, dat_imp)[1:10]
head(cbind(dat, dat_imp))[1:10]
head(cbind(dat, dat_imp))[,1:10]
head(cbind(dat, dat_imp))[1:10,]
head(dat)
cbind(dat, dat_imp)[1:10][3]
cbind(dat, dat_imp)[1]
cbind(dat, dat_imp)[,1:10]
cbind(dat, dat_imp)[1:10,]
cbind(dat, dat_imp)[1:20,]
dat[1:20]
dat[1:20,]
dat[1:1000,]
cbind(dat, dat_imp)[c(1:5, 688:692)]
cbind(dat, dat_imp)[c(1:5, 688:692),]
weekdays()
weekdays(dat$date)
dat_imp$datetype <- ifelse (weekdays(dat_imp$date)=="Saturday" |
weekdays(dat_imp$date)=="Sunday", "weekend", "weekday")
dat_imp
unique(dat_imp[c(date, datetype),])
names(dat_imp)
unique(dat_imp[c("date", "datetype"),])
unique(dat_imp[c("date", "datetype")])
class(dat_imp)
class(dat_imp$datetype)
dat_imp$datetype <- factor(ifelse (weekdays(dat_imp$date)=="Saturday" |
weekdays(dat_imp$date)=="Sunday", "weekend", "weekday"))
dat_imp
class(dat_imp$datetype)
iSSavgsteps_int <- aggregate(steps ~ interval, data = subset(dat_imp, datetype = "weekend", FUN = mean)
)
iSSavgsteps_int <- aggregate(steps ~ interval, data = subset(dat_imp, datetype = "weekend"), FUN = mean)
iSSavgsteps_int
iMFavgsteps_int <- aggregate(steps ~ interval,
data = subset(dat_imp, datetype = "weekday"), FUN = mean)
iSSavgsteps_int <- aggregate(steps ~ interval,
data = subset(dat_imp, datetype = "weekend"), FUN = mean)
iavgsteps_int <- rbind(cbind(iMFavgsteps_int, datetype = "weekday"),
cbind(iSSavgsteps_int, datetype = "weekend"))
iavgsteps_int
ggplot(iavgsteps_int, aes(x=interval, y=steps, group=1)) + geom_line() +
scale_x_discrete(breaks=seq(0,2500,500)) +
facet_wrap(~ datetype, nrow=2) +
ylab("Average Number of steps") +
xlab("Interval") +
main("Time Series Plot of the Average Number of teps Taken")
ggplot(iavgsteps_int, aes(x=interval, y=steps, group=1)) + geom_line() +
scale_x_discrete(breaks=seq(0,2500,500)) +
facet_wrap(~ datetype, nrow=2) +
ylab("Average Number of steps") +
xlab("Interval") +
ggtitle("Time Series Plot of the Average Number of teps Taken")
ggplot(iavgsteps_int, aes(x=interval, y=steps)) + geom_line() +
scale_x_discrete(breaks=seq(0,2500,500)) +
facet_wrap(~ datetype, nrow=2) +
ylab("Average Number of steps") +
xlab("Interval") +
title("Time Series Plot of the Average Number of Steps Taken")
ggplot(iavgsteps_int, aes(x = interval, y = steps, group = 1)) +
geom_line() +
scale_x_discrete(breaks=seq(0,2500,500)) +
facet_wrap(~ datetype, nrow=2) +
ylab("Average Number of steps") +
xlab("Interval") +
title("Time Series Plot of the Average Number of Steps Taken")
ggplot(iavgsteps_int, aes(x = interval, y = steps, group = 1)) +
geom_line() +
scale_x_discrete(breaks=seq(0,2500,500)) +
facet_wrap(~ datetype, nrow=2) +
ylab("Average Number of steps") +
xlab("Interval") +
ggtitle("Time Series Plot of the Average Number of Steps Taken")
ggplot(iavgsteps_int, aes(x = interval, y = steps, group = 1)) +
geom_line() +
facet_wrap(~ datetype, nrow=2) +
ylab("Average Number of steps") +
xlab("Interval") +
ggtitle("Time Series Plot of the Average Number of Steps Taken")
cbind(cbind(iMFavgsteps_int, datetype = "weekday"),
cbind(iSSavgsteps_int, datetype = "weekend"))
iMFavgsteps_int
iSSavgsteps_int
iMFavgsteps_int <- aggregate(steps ~ interval,
data = subset(dat_imp, datetype == "weekday"), FUN = mean)
iSSavgsteps_int <- aggregate(steps ~ interval,
data = subset(dat_imp, datetype == "weekend"), FUN = mean)
iSSavgsteps_int
iavgsteps_int <- rbind(cbind(iMFavgsteps_int, datetype = "weekday"),
cbind(iSSavgsteps_int, datetype = "weekend"))
ggplot(iavgsteps_int, aes(x = interval, y = steps, group = 1)) +
geom_line() +
scale_x_discrete(breaks =seq(0, 500, 1000, 1500, 2000, 2500)) +
facet_wrap(~ datetype, nrow = 2) +
ylab("Average Number of steps") +
xlab("Interval") +
ggtitle("Time Series Plot of the Average Number of Steps Taken")
ggplot(iavgsteps_int, aes(x = interval, y = steps, group = 1)) +
geom_line() +
scale_x_discrete(breaks =seq(0, 500, 1000, 1500, 2000)) +
facet_wrap(~ datetype, nrow = 2) +
ylab("Average Number of steps") +
xlab("Interval") +
ggtitle("Time Series Plot of the Average Number of Steps Taken")
iSSavgsteps_int
ggplot(iavgsteps_int, aes(x = interval, y = steps, group = 1)) +
geom_line() +
scale_x_discrete(breaks =seq(0, 50, 100, 150, 200, 250)) +
facet_wrap(~ datetype, nrow = 2) +
ylab("Average Number of steps") +
xlab("Interval") +
ggtitle("Time Series Plot of the Average Number of Steps Taken")
ggplot(iavgsteps_int, aes(x = interval, y = steps, group = 1)) +
geom_line() +
facet_wrap(~ datetype, nrow = 2) +
ylab("Average Number of steps") +
xlab("Interval") +
ggtitle("Time Series Plot of the Average Number of Steps Taken")
ggplot(iavgsteps_int, aes(x = interval, y = steps, group = 1)) +
geom_line() +
scale_x_discrete(breaks=seq(0, 2500, 500)) +
facet_wrap(~ datetype, nrow = 2) +
ylab("Average Number of steps") +
xlab("Interval") +
ggtitle("Time Series Plot of the Average Number of Steps Taken")
